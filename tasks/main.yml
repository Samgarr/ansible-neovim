---

# Install python dependencies
- block:
  - name: Install neovim python dependencies
    apt: name={{ item }} state=latest
    loop:
      - "{{ python_required_packages }}"

  become: true
  become_user: root
  tags:
    - bootstrap
    - install
    - update


  become: true
  become_user: root
  tags:
    - bootstrap
    - install
    - update

# Install neovim
- block:
      # I'm relying on backports
    - name: Install neovim from repo
      apt: name="{{ neovim_name }}" state="latest"

    - name: use nvim for vi
      alternatives: name=vi path=/usr/bin/nvim
    - name: use nvim for vim
      alternatives: name=vim path=/usr/bin/nvim
    - name: use nvim for editor
      alternatives: name=editor path=/usr/bin/nvim
  become: true
  become_user: root

  tags:
    - bootstrap
    - install
    - update

- block:
    - name: Install python neovim plugin
      pip:
        name: neovim
        executable: "{{ pip3_name }}"
        state: "{{ install_state }}"
        extra_args: --user

  tags:
    - bootstrap
    - install
    - update

# Install vim-plug
- block:
    - name: Make "{{ neovim_config_dir }}/autoload" directory
      file: path="{{ neovim_config_dir }}/autoload" state=directory

    - name: Install vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: "{{ neovim_config_dir }}/autoload/plug.vim"
        force: yes
  become: true
  become_user: root
  tags:
    - bootstrap
    - configure

- block:
    - name: Install vim plugins
      shell: nvim +PlugInstall +qall --headless
      tags: plugins
  tags:
    - bootstrap
    - configure
    - update

- block:
    - name: "Check if lock file exists"
      stat:
        path: /run/neovim_env.lock
      register: env_lock_path

    - name: "Export variables for neovim"
      lineinfile:
        path: /etc/environment
        line: "{{ env_lines}}"
      register: env_lines
      when: not env_lock_path.stat.exists

    - name: "Export variables for neovim"
      lineinfile:
        path: /root/.bashrc
        line: "{{ bashrc_env }}"
      when: not env_lock_path.stat.exists

    - name: "Create lock file"
      file:
        path: /run/neovim_env.lock
        state: touch
      register: env_lock
      when: env_lines.changed

    - name: "init file"
      template:
        src: templates/init.vim.j2
        dest: "{{ init_path }}/init.vim"
  tags:
    - profile
